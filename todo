How the project will work:
	=> Usage "assistant <Operation> <Project Type> <Project Directory Name>"
			* <Operation> can be either "create" or "open"
					* "create" should:
							* "create" should create a new project directory in the correct folder.
							* "open" should open an existing project directory from the correct folder.

			* <Project Type> is the type of project 
					* Example: python, flutter, dotnet, etc
					* If the "python" is the <Project Type> then the working directory should be:
							=> "home/suppe/programming/PycharmProjects/"
					* If the "flutter" is the <Project Type> then the working directory should be:
							=> "home/suppe/programming/FlutterProjects/"

			* <Project Directory Name> is the name of directory to be opened

	=> Functionality:
			* create:
					* This should setup the new project which involves:
							* creating the project directory correctly
									* (done) python:
											=> "mkdir /home/suppe/programming/<Project Type>/<Project Directory Name>"
											=> "cd /home/suppe/programming/<Project Type>/<Project Directory Name>"
											=> "python3 virtualenv /home/suppe/programming/<Project Type>/<Project Directory Name>/venv"
									* (done) flutter:
											=> "cd /home/suppe/programming/<Project Type>/"
											=> "flutter create <Project Directory Name>"
											=> "flutter create <Project Directory Name>"							
							* (done) creating an empty README.md file
									=> "touch /home/suppe/programming/<Project Type>/<Project Directory Name>/README.md"
							* (done) setting up the local git repo
									=> "git init"
							* (done) creating a new remote repo on github with:
									* name of the remote being the same as the name of the project  
									* a .gitignore according to the type of project
											=> (done) *setup the the remote repo*
											=> "git remote add origin <REPO>"
											=> "git pull origin main"
											=> "git push origin main"


